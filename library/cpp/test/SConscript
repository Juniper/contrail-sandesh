# -*- mode: python; -*-

#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#

Import('SandeshEnv')
import sys

env = SandeshEnv.Clone()

env.Append(CPPPATH = [Dir('.').abspath,
                      Dir('#build/include').abspath,
                      Dir('#build/include/libxml2').abspath,
                      Dir('#controller/src').abspath,
                      Dir('#tools').abspath,
                      '../',
                      '../../common/test/',
                      env['TOP'] + '/io',
                      '/usr/include/libxml2',
                      ])
    
# Generate the source files
SandeshRWTestGenFiles  = env.SandeshGenCpp('sandesh_rw_test.sandesh')
SandeshMessageTestGenFiles  = env.SandeshGenCpp('sandesh_message_test.sandesh')
SandeshTraceTestGenFiles = env.SandeshGenCpp('sandesh_trace_test.sandesh')
SandeshHttpTestGenFiles = env.SandeshGenCpp('sandesh_http_test.sandesh')
SandeshPerfTestGenFiles = env.SandeshGenCpp('sandesh_perf_test.sandesh')

SandeshRWTestGenSrcs = env.ExtractCpp(SandeshRWTestGenFiles)
SandeshMessageTestGenSrcs = env.ExtractCpp(SandeshMessageTestGenFiles)
SandeshTraceTestGenSrcs = env.ExtractCpp(SandeshTraceTestGenFiles)
SandeshTraceTestGenObjs = env.Object(SandeshTraceTestGenSrcs)
SandeshHttpTestGenSrcs = env.ExtractCpp(SandeshHttpTestGenFiles)
SandeshPerfTestGenSrcs = env.ExtractCpp(SandeshPerfTestGenFiles)

SandeshLibPath = ['#/build/lib',
                  Dir(env['TOP']).abspath + '/base',
                  Dir(env['TOP']).abspath + '/base/test',
                  Dir(env['TOP']).abspath + '/io',
                  ]

SandeshLibs = ['gunit',
               'sandesh',
               'http',
               'http_parser',
               'curl',
               'io',
               'sandeshvns',
               'process_info',
               'base',
               'boost_regex',
               'boost_system',
               'boost_date_time',
               'log4cplus',
               'pthread',
               'curl',
               'xml2',
               'xslt',
               'task_test',
               'pugixml',
               ]

if env.UseSystemTBB():
    SandeshLibs.append('tbb')
else:
    SandeshLibs.append('tbb_debug')

env.Append(LIBPATH = SandeshLibPath)

if env['OPT'] == 'coverage':
    env.Prepend(LIBS = 'gcov')

env.Prepend(LIBS = SandeshLibs)

if sys.platform != 'darwin':
    env.Append(LIBS = ['rt'])

if sys.platform.startswith('freebsd'):
    env.Append(LIBS = ['z', 'lzma', 'iconv'])

sandesh_perf_test = env.UnitTest('sandesh_perf_test',
                                 SandeshPerfTestGenSrcs + 
                                 ['sandesh_perf_test.cc'],
                                )
env.Alias('src/sandesh:sandesh_perf_test', sandesh_perf_test)

sandesh_session_test = env.UnitTest('sandesh_session_test',
                                    ['sandesh_session_test.cc'],
                                    )
env.Alias('src/sandesh:sandesh_session_test', sandesh_session_test)

sandesh_rw_test = env.UnitTest('sandesh_rw_test',
                               SandeshRWTestGenSrcs +
                               ['sandesh_rw_test.cc']
                               )
env.Alias('src/sandesh:sandesh_rw_test', sandesh_rw_test)

sandesh_message_test = env.UnitTest('sandesh_message_test',
                                   SandeshMessageTestGenSrcs +
                                   env['SandeshBufferTestGenCppObjs'] +
                                   ['sandesh_message_test.cc']
                                   )
env.Alias('src/sandesh:sandesh_message_test', sandesh_message_test)

sandesh_trace_test = env.UnitTest('sandesh_trace_test',
                                  SandeshTraceTestGenObjs +
                                  ['sandesh_trace_test.cc']
                                  )
env.Alias('src/sandesh:sandesh_trace_test', sandesh_trace_test)

sandesh_show_trace_test = env.UnitTest('sandesh_show_trace_test',
                                      SandeshTraceTestGenObjs +
                                      ['sandesh_show_trace_test.cc']
                                      )
env.Alias('src/sandesh:sandesh_show_trace_test', sandesh_show_trace_test)

sandesh_http_test = env.UnitTest('sandesh_http_test',
                                  SandeshHttpTestGenSrcs +
                                  ['sandesh_http_test.cc']
                                  )
env.Alias('src/sandesh:sandesh_http_test', sandesh_http_test)
env.Requires(sandesh_http_test, '#/build/include/libxml2/libxml/tree.h')

sandesh_test_common_obj = env.Object('sandesh_test_common.cc')
sandesh_state_machine_test = env.UnitTest('sandesh_state_machine_test',
                                          ['sandesh_state_machine_test.cc'] +
                                           sandesh_test_common_obj 
                                          )
env.Alias('src/sandesh:sandesh_state_machine_test', sandesh_state_machine_test)

sandesh_client_test = env.UnitTest('sandesh_client_test',
                                          ['sandesh_client_test.cc'] +
                                           sandesh_test_common_obj 
                                          )
env.Alias('src/sandesh:sandesh_client_test', sandesh_client_test)

sandesh_statistics_test = env.UnitTest('sandesh_statistics_test',
                                       ['sandesh_statistics_test.cc'])
env.Alias('src/sandesh:sandesh_statistics_test', sandesh_statistics_test)

test_suite = [sandesh_message_test,
              sandesh_rw_test,
              sandesh_session_test,
              sandesh_trace_test,
              sandesh_http_test,
              sandesh_state_machine_test,
              sandesh_perf_test,
              sandesh_client_test,
              sandesh_statistics_test,
           ]

test = env.TestSuite('sandesh-test', test_suite)

env.Alias('sandesh:cpp_test', test)

Return('test_suite')
